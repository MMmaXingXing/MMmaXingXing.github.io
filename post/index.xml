<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Astar Blog</title>
    <link>https://mmmaxingxing.github.io/post/</link>
    <description>Recent content in Posts on Astar Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 25 Mar 2019 17:55:13 +0800</lastBuildDate>
    
	<atom:link href="https://mmmaxingxing.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>创建一个手机端项目</title>
      <link>https://mmmaxingxing.github.io/post/cours/compatible/%E6%89%8B%E6%9C%BA%E7%89%88%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Mon, 25 Mar 2019 17:55:13 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/compatible/%E6%89%8B%E6%9C%BA%E7%89%88%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/</guid>
      <description>meta 标签 1 2 3 4 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1&amp;#34;&amp;gt; //1：1屏占比 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;initial-scale=1.0,width=device-width,user-scalable=0,maximum-scale=1.0&amp;#34;/&amp;gt; //手机端完美视图 &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; //打开浏览器为ie9及以上版本 &amp;lt;meta name=&amp;#34;renderer&amp;#34; content=&amp;#34;webkit&amp;#34;&amp;gt; //有限打开内核为webkit 引入</description>
    </item>
    
    <item>
      <title>input type number 火狐兼容</title>
      <link>https://mmmaxingxing.github.io/post/cours/compatible/input_type_number_%E5%85%BC%E5%AE%B9/</link>
      <pubDate>Mon, 25 Mar 2019 17:52:44 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/compatible/input_type_number_%E5%85%BC%E5%AE%B9/</guid>
      <description>input type number 火狐兼容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 input::-webkit-outer-spin-button, input::-webkit-inner-spin-button { -webkit-appearance: none; appearance: none; margin: 0; } input{ -moz-appearance:textfield !important; }</description>
    </item>
    
    <item>
      <title>斐波拉契实现</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/%E6%96%90%E6%B3%A2%E6%8B%89%E5%A5%91%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 19 Mar 2019 22:54:31 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/%E6%96%90%E6%B3%A2%E6%8B%89%E5%A5%91%E5%AE%9E%E7%8E%B0/</guid>
      <description>斐波拉契 斐波那契数列 1, 1, 2,3,5,8,13,21….. 使用公式f( n ) = f(n-1)+f(n-2),结束条件f(2) =1, f(1) = 1 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>vueX的知识总结（包括在vue-cli中的使用）</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/webpak%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 18 Mar 2019 22:22:27 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/webpak%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>webpack 之 dev.env.js &amp;amp;&amp;amp; prod.env.js 1 2 3 4 5 6 7 8 9 10 //dev.env.js //开发版本 &amp;#39;use strict&amp;#39; const merge = require(&amp;#39;webpack-merge&amp;#39;) const prodEnv = require(&amp;#39;./prod.env&amp;#39;) module.exports = merge(prodEnv, { NODE_ENV: &amp;#39;&amp;#34;development&amp;#34;&amp;#39;, BASE_API: &amp;#39;&amp;#34;https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin&amp;#34;&amp;#39;, }) 1 2 3 4 5 6 7 //prod.env.js //线上 &amp;#39;use strict&amp;#39; module.exports = { NODE_ENV: &amp;#39;&amp;#34;production&amp;#34;&amp;#39;, BASE_API: &amp;#39;&amp;#34;https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin&amp;#34;&amp;#39;, } 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>diff算法</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/diff-%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 17 Mar 2019 23:05:51 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/diff-%E7%AE%97%E6%B3%95/</guid>
      <description>一、虚拟dom 众所周知，直接使用真实dom对性能的耗费是非常巨大的，因为它会造成浏览器频繁的重绘，浏览器中渲染一个页面所需要的标准实在是太多</description>
    </item>
    
    <item>
      <title>数据结构与算法</title>
      <link>https://mmmaxingxing.github.io/post/technology/arithmetic/01_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 16 Mar 2019 23:05:51 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/arithmetic/01_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</guid>
      <description>数据结构 一种研究非数值计算的程序设计问题中的操作对象，以及他们之间的关系和操作之间的相关问题 程序设计 = 数据结构 + 算法 数据结构，就是数据关系，</description>
    </item>
    
    <item>
      <title>vue elementui 使用记录 图片上传</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/elementuiupload/</link>
      <pubDate>Fri, 15 Mar 2019 23:33:08 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/elementuiupload/</guid>
      <description>一、前端做图片上传展示 1 2 let _URL = window.URL || window.webkitURL; self.form.imageLogo = _URL.createObjectURL(file); 二、elementui 判断图片大小 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 const isSize = new Promise(function(resolve, reject) { let width =</description>
    </item>
    
    <item>
      <title>promise async await</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/async_await_promise/</link>
      <pubDate>Mon, 04 Mar 2019 17:29:17 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/async_await_promise/</guid>
      <description>Promise promise 是异步编程的一种解决方案，简单来说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个一步操作）的结果。从语法上来说，Promis</description>
    </item>
    
    <item>
      <title>vueX的知识总结（包括在vue-cli中的使用）</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/vuex-knowledge/</link>
      <pubDate>Thu, 28 Feb 2019 11:11:48 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/vuex-knowledge/</guid>
      <description>介绍 Vuex是一个专门为vue.js应用程序开发的状态管理模式，四个部分 （1）、state：单一状态树，每个应用仅仅包含一个sate实例，使</description>
    </item>
    
    <item>
      <title>冒泡排序</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/01_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Thu, 28 Feb 2019 11:11:48 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/01_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Array_从排序数组中删除重复项</title>
      <link>https://mmmaxingxing.github.io/post/technology/arithmetic/01_array_%E4%BB%8E%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9/</link>
      <pubDate>Fri, 22 Feb 2019 10:54:40 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/arithmetic/01_array_%E4%BB%8E%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid>
      <description>题目描述 给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。 不要使用额外的数组空间，你必须在原</description>
    </item>
    
    <item>
      <title>CSS绘制心形</title>
      <link>https://mmmaxingxing.github.io/post/technology/css/heart/</link>
      <pubDate>Thu, 21 Feb 2019 17:17:52 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/css/heart/</guid>
      <description>一、创建一个dom元素并为其增加宽高 1 &amp;lt;div id=&amp;#34;heart&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; 1 2 3 4 5 #heart { position: relative; width: 50px; height: 40px; } 二、对目标元素的伪元素进行操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #heart::before, #heart::after {</description>
    </item>
    
    <item>
      <title>mockjs引入以及使用方式</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/mockjs_bas/</link>
      <pubDate>Tue, 19 Feb 2019 16:08:52 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/mockjs_bas/</guid>
      <description>一、mock引入 1 2 3 4 5 1、普通引入 script src 即可 2、vue中使用 npm install mockjs --dev main.js中 import &amp;#34;./mock&amp;#34; 二、mock 代码相关 拦截部分 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>依靠github创建自己的博客站点</title>
      <link>https://mmmaxingxing.github.io/post/cours/creat_github_blog/</link>
      <pubDate>Fri, 15 Feb 2019 16:43:08 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/creat_github_blog/</guid>
      <description>一、依靠github创建自己的博客文档。 此步骤网上教程拼接得到，按需调整（放在最后生成上传之后查看是否需要）打包上传从本地测试感觉似乎git</description>
    </item>
    
  </channel>
</rss>