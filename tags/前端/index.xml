<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端 on Astar Blog</title>
    <link>https://mmmaxingxing.github.io/tags/%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 前端 on Astar Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 Mar 2019 13:55:25 +0800</lastBuildDate>
    
	<atom:link href="https://mmmaxingxing.github.io/tags/%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>js数组扁平化操作</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 27 Mar 2019 13:55:25 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96%E6%93%8D%E4%BD%9C/</guid>
      <description>常规操作 for of 递归实现 1 2 3 4 5 6 7 8 9 function flatten(arr, result = []) { for (let item of arr) { if (Array.isArray(item.children)) flatten(item.children, result) else result.push(item) } return result } 迭代器实现 生成器实现 reduce 三句话实现法 降维打击法 lodash 层次法 参考感</description>
    </item>
    
    <item>
      <title>多维数组转一维数组</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84/</link>
      <pubDate>Thu, 21 Mar 2019 23:11:11 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84/</guid>
      <description>二维数组转一维 1 2 3 4 5 let data = [[1,2,3],[1,2,3],[1,2,3]]; let res = []; data.forEach(item =&amp;gt; { item.forEach? item.forEach(val =&amp;gt;{res.push(val)}) :res.push(item) }) 1 2 3 4 5 6 7 8 9 10 11 12 let data = [[1,2,3],[1,2,3],[1,2,3]]; let res = []; var falt = (res) =&amp;gt; { if(res.forEach){ res.forEach(val =&amp;gt; { val.forEach ? falt(val) : res.push(val) }) }else{ res.push(res) } }</description>
    </item>
    
    <item>
      <title>webpack配置使用小技巧</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/webpak%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 18 Mar 2019 22:22:27 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/webpak%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>webpack 之 dev.env.js &amp;amp;&amp;amp; prod.env.js 1 2 3 4 5 6 7 8 9 10 //dev.env.js //开发版本 &amp;#39;use strict&amp;#39; const merge = require(&amp;#39;webpack-merge&amp;#39;) const prodEnv = require(&amp;#39;./prod.env&amp;#39;) module.exports = merge(prodEnv, { NODE_ENV: &amp;#39;&amp;#34;development&amp;#34;&amp;#39;, BASE_API: &amp;#39;&amp;#34;https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin&amp;#34;&amp;#39;, }) 1 2 3 4 5 6 7 //prod.env.js //线上 &amp;#39;use strict&amp;#39; module.exports = { NODE_ENV: &amp;#39;&amp;#34;production&amp;#34;&amp;#39;, BASE_API: &amp;#39;&amp;#34;https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin&amp;#34;&amp;#39;, } 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>diff算法</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/diff-%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 17 Mar 2019 23:05:51 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/diff-%E7%AE%97%E6%B3%95/</guid>
      <description>一、虚拟dom 众所周知，直接使用真实dom对性能的耗费是非常巨大的，因为它会造成浏览器频繁的重绘，浏览器中渲染一个页面所需要的标准实在是太多</description>
    </item>
    
    <item>
      <title>vue elementui 使用记录 图片上传</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript.1/elementuiupload/</link>
      <pubDate>Fri, 15 Mar 2019 23:33:08 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript.1/elementuiupload/</guid>
      <description>一、前端做图片上传展示 1 2 let _URL = window.URL || window.webkitURL; self.form.imageLogo = _URL.createObjectURL(file); 二、elementui 判断图片大小 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 const isSize = new Promise(function(resolve, reject) { let width =</description>
    </item>
    
    <item>
      <title>vue elementui 使用记录 图片上传</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/elementuiupload/</link>
      <pubDate>Fri, 15 Mar 2019 23:33:08 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/elementuiupload/</guid>
      <description>一、前端做图片上传展示 1 2 let _URL = window.URL || window.webkitURL; self.form.imageLogo = _URL.createObjectURL(file); 二、elementui 判断图片大小 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 const isSize = new Promise(function(resolve, reject) { let width =</description>
    </item>
    
    <item>
      <title>vue elementui 使用记录 图片上传</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/elementuiupload/</link>
      <pubDate>Fri, 15 Mar 2019 23:33:08 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/elementuiupload/</guid>
      <description>一、前端做图片上传展示 1 2 let _URL = window.URL || window.webkitURL; self.form.imageLogo = _URL.createObjectURL(file); 二、elementui 判断图片大小 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 const isSize = new Promise(function(resolve, reject) { let width =</description>
    </item>
    
    <item>
      <title>vueX的知识总结（包括在vue-cli中的使用）</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/vuex-knowledge/</link>
      <pubDate>Thu, 28 Feb 2019 11:11:48 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/vuex-knowledge/</guid>
      <description>介绍 Vuex是一个专门为vue.js应用程序开发的状态管理模式，四个部分 （1）、state：单一状态树，每个应用仅仅包含一个sate实例，使</description>
    </item>
    
    <item>
      <title>冒泡排序</title>
      <link>https://mmmaxingxing.github.io/post/cours/javascript/01_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Thu, 28 Feb 2019 11:11:48 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/javascript/01_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSS绘制心形</title>
      <link>https://mmmaxingxing.github.io/post/technology/css/heart/</link>
      <pubDate>Thu, 21 Feb 2019 17:17:52 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/css/heart/</guid>
      <description>一、创建一个dom元素并为其增加宽高 1 &amp;lt;div id=&amp;#34;heart&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; 1 2 3 4 5 #heart { position: relative; width: 50px; height: 40px; } 二、对目标元素的伪元素进行操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #heart::before, #heart::after {</description>
    </item>
    
    <item>
      <title>mockjs引入以及使用方式</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/mockjs_bas/</link>
      <pubDate>Tue, 19 Feb 2019 16:08:52 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/mockjs_bas/</guid>
      <description>一、mock引入 1 2 3 4 5 1、普通引入 script src 即可 2、vue中使用 npm install mockjs --dev main.js中 import &amp;#34;./mock&amp;#34; 二、mock 代码相关 拦截部分 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
  </channel>
</rss>