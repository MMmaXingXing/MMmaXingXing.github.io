<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on Astar Blog</title>
    <link>https://mmmaxingxing.github.io/tags/vue/</link>
    <description>Recent content in Vue on Astar Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 12 Jun 2019 14:58:53 +0800</lastBuildDate><atom:link href="https://mmmaxingxing.github.io/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ElementUI2.4.11 Upload 源码</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/element-ui/environment/</link>
      <pubDate>Wed, 12 Jun 2019 14:58:53 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/element-ui/environment/</guid>
      <description>&lt;p&gt;upload 源码 整理&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vue nextTicket 源码分析</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/01-vue-soundcode-nextticket/</link>
      <pubDate>Tue, 07 May 2019 15:39:50 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/01-vue-soundcode-nextticket/</guid>
      <description>nextTicket源码构成 1、能力检测 2、延时调用 3、原理是利用js同步函数执行完毕后才会执行进入异步加载流的规则 全部源码 1 2 3 4 5 6 7 8</description>
    </item>
    
    <item>
      <title>Vue Mixins</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/01-vue-grammer-mixins/</link>
      <pubDate>Tue, 07 May 2019 15:31:38 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/01-vue-grammer-mixins/</guid>
      <description>一、Mixins 把vue 的方法拉出来写了,相同的覆盖，不同的打包进去。</description>
    </item>
    
    <item>
      <title>imageUp To base64</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/image_up_base64/</link>
      <pubDate>Tue, 16 Apr 2019 14:24:37 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/image_up_base64/</guid>
      <description>一、本地上传图片转为base64 1 2 3 4 5 6 7 8 9 10 //假设已经拿到了 图片的file 则 var reader = new FileReader(); var imgUrlBase64; if (file) { //将文件以Data URL形式读入</description>
    </item>
    
    <item>
      <title>Vue-Cli兼容IE9</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/vue_inclusive_ie9/</link>
      <pubDate>Sat, 30 Mar 2019 21:07:20 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/vue_inclusive_ie9/</guid>
      <description>1、meta标签要写好 1 2 3 4 5 6 &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;renderer&amp;#34; content=&amp;#34;webkit&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;author&amp;#34; content=&amp;#34;lyadmin&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=Edge,chrome=1&amp;#34;&amp;gt; 2、编译插件要装好 1 2 npm install babel-polyfill --save-dev 3、其他配置要配好 1 2 3 4 5 6 7 8 9 // webpack.base.conf.js</description>
    </item>
    
    <item>
      <title>vue3.0&amp;&amp;vue2.0项目安装以及初始化</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/vue3.0_installvue2.0/</link>
      <pubDate>Fri, 22 Mar 2019 23:13:46 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/vue3.0_installvue2.0/</guid>
      <description>Vue3.0项目安装以及介绍 1 2 3 4 5 6 //安装 npm install -g @vue/cli //安装vue2.0(兼容) npm install -g @vue/cli-init 变化更新 部分命令发生了变化 删除了vue list 创建项目</description>
    </item>
    
    <item>
      <title>Vue常用操作整理</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/vue_useful_expressions/</link>
      <pubDate>Wed, 20 Mar 2019 23:13:46 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/vue_useful_expressions/</guid>
      <description>1、创建全局过滤器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //main.js 中 Object.keys(allFilter).forEach(key =&amp;gt; { Vue.filter(key,allFilter[key]) }) //base_filter中 //获取yyyy-mm-dd类型时间 let getDate = value =&amp;gt;</description>
    </item>
    
    <item>
      <title>webpack配置使用小技巧</title>
      <link>https://mmmaxingxing.github.io/post/technology/plugin/webpak%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 18 Mar 2019 22:22:27 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/technology/plugin/webpak%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>webpack 之 dev.env.js &amp;amp;&amp;amp; prod.env.js 1 2 3 4 5 6 7 8 9 10 11 12 //dev.env.js //开发版本 &amp;#39;use strict&amp;#39; const merge = require(&amp;#39;webpack-merge&amp;#39;) const prodEnv = require(&amp;#39;./prod.env&amp;#39;) module.exports = merge(prodEnv, { NODE_ENV: &amp;#39;&amp;#34;development&amp;#34;&amp;#39;, BASE_API: &amp;#39;&amp;#34;https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin&amp;#34;&amp;#39;, }) 1 2 3 4 5 6 7 8 //prod.env.js //线上 &amp;#39;use strict&amp;#39; module.exports = { NODE_ENV: &amp;#39;&amp;#34;production&amp;#34;&amp;#39;, BASE_API: &amp;#39;&amp;#34;https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin&amp;#34;&amp;#39;, } 1 2 3 4</description>
    </item>
    
    <item>
      <title>diff算法</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/javascript/arithmetic/diff-%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 17 Mar 2019 23:05:51 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/javascript/arithmetic/diff-%E7%AE%97%E6%B3%95/</guid>
      <description>一、虚拟dom 众所周知，直接使用真实dom对性能的耗费是非常巨大的，因为它会造成浏览器频繁的重绘，浏览器中渲染一个页面所需要的标准实在是太多</description>
    </item>
    
    <item>
      <title>vue elementui 使用记录 图片上传</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/elementuiupload/</link>
      <pubDate>Fri, 15 Mar 2019 23:33:08 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/elementuiupload/</guid>
      <description>一、前端做图片上传展示 1 2 3 4 let _URL = window.URL || window.webkitURL; self.form.imageLogo = _URL.createObjectURL(file); 二、elementui 判断图片大小 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 const isSize = new Promise(function(resolve, reject)</description>
    </item>
    
    <item>
      <title>vueX的知识总结（包括在vue-cli中的使用）</title>
      <link>https://mmmaxingxing.github.io/post/cours/front/vue/vuex-knowledge/</link>
      <pubDate>Thu, 28 Feb 2019 11:11:48 +0800</pubDate>
      
      <guid>https://mmmaxingxing.github.io/post/cours/front/vue/vuex-knowledge/</guid>
      <description>介绍 Vuex是一个专门为vue.js应用程序开发的状态管理模式，四个部分 （1）、state：单一状态树，每个应用仅仅包含一个sate实例，使</description>
    </item>
    
  </channel>
</rss>
